import 'dotenv/config';
import { PrismaClient } from '@prisma/client';
import { Scenes, Telegraf, Markup } from "telegraf";
import LocalSession from 'telegraf-session-local';
import { MyContext } from "./types";
import { greeterScene } from "./scenes/greeterScene.js";
import { cityScene } from "./scenes/cityScene.js";
import { categoriesScene } from "./scenes/categoriesScene.js";
import { changeCityScene } from "./scenes/changeCityScene.js";
import dedent from "dedent-js";

const prisma = new PrismaClient();
const {leave, enter} = Scenes.Stage;

const init = async () => {
  const token = process.env.TOKEN;

  if (!token) {
    throw new Error('–ù–µ –∑–∞–¥–∞–Ω —Ç–æ–∫–µ–Ω');
  }

  const bot = new Telegraf<MyContext>(token);

  const stage = new Scenes.Stage<MyContext>([greeterScene(), cityScene(), categoriesScene(), changeCityScene()]);

  bot.use(new LocalSession({database: 'session.json'}).middleware());
  bot.use(stage.middleware());
  bot.use((ctx, next) => {
    ctx.myContextProp ??= '';
    ctx.session.cityProp ??= '';
    ctx.session.userProp ??= ctx?.from?.id;
    ctx.scene.session.mySceneSessionProp ??= '';
    return next();
  });
  bot.command("start", ctx => ctx.scene.enter("greeter"));
  bot.command("city", ctx => ctx.scene.enter("changeCity"));


  bot.hears('–†–∞—Å—Å—ã–ª–∫–∞', async (ctx) => {
      // sending mail
    const action = await prisma.action.create({ data: {
        title: 'React Query',
        text: '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –∫—É—Ä—Å –ø–æ React Query',
        startDay: new Date('2022-10-20T19:27:10.065Z'),
        endDay: new Date('2023-12-15T19:27:10.065Z'),
        city: '–ú–æ—Å–∫–≤–∞',
        tags: ['–ö—É—Ä—Å—ã', 'React Query'],
        category: '–ö—É—Ä—Å—ã',
      }});
      ctx.replyWithHTML(
          dedent`
          <b>üìö –ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${action.title}
          
          <b>üí¨ –û–ø–∏—Å–∞–Ω–∏–µ:</b> ${action.text}
          
          <b>üè¢ –ì–æ—Ä–æ–¥:</b> ${action.city}
          
          <b>üèÅ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∞–∫—Ü–∏–∏:</b> ${action.startDay.toLocaleDateString('ru-RU')}
          
          <b>üèÅ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–∫—Ü–∏–∏:</b> ${action.endDay.toLocaleDateString('ru-RU')}
          
          <b>üè∑ –¢–µ–≥–∏:</b> ${action.tags.map((t) => `#${t}`).join(' ')}
          `);
  });

    bot.on("message", ctx => ctx.reply("–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π /start"));

  bot.launch();
  await prisma.$connect();
}

init()
  .then(async () => await prisma.$disconnect())
  .catch(async (e) => {
    console.log(e);
    await prisma.$disconnect();
    process.exit(1);
  });

